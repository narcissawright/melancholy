[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[ext_resource path="res://shaders/actor.shader" type="Shader" id=1]
[ext_resource path="res://player/melanie/texture_shade.png" type="Texture" id=2]
[ext_resource path="res://player/melanie/texture_lit.png" type="Texture" id=3]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode cull_front, unshaded;

uniform float outline_width = 1.5;
uniform sampler2D tex_shaded : hint_albedo;

void vertex() {
	vec4 clip_position = PROJECTION_MATRIX * (MODELVIEW_MATRIX * vec4(VERTEX, 1.0));
	vec3 clip_normal = mat3(PROJECTION_MATRIX) * (mat3(MODELVIEW_MATRIX) * NORMAL);
	
	vec2 offset = normalize(clip_normal.xy) / VIEWPORT_SIZE * clip_position.w * outline_width * 2.0;
	
	clip_position.xy += offset;
	
	POSITION = clip_position;
}

void fragment() {
	vec3 texture_color = texture(tex_shaded, UV).rgb;
	if (length(texture_color) == 0.0) {
		ALPHA = 0.0;
	} else {
		ALBEDO = texture_color * 0.75;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/outline_width = 1.5
shader_param/tex_shaded = ExtResource( 2 )

[resource]
next_pass = SubResource( 2 )
shader = ExtResource( 1 )
shader_param/light_vec = Vector3( 0.57735, 0.57735, 0.57735 )
shader_param/opacity_dither = false
shader_param/celshaded = true
shader_param/enable_rim = true
shader_param/not_shaded = false
shader_param/use_vertex_color = false
shader_param/vertex_color_as_occlusion = false
shader_param/color_lit = Color( 0.12549, 0.141176, 0.192157, 1 )
shader_param/color_dim = Color( 0.1, 0.1, 0.12, 1 )
shader_param/use_texture = true
shader_param/damaged = false
shader_param/locked = false
shader_param/tex_lit = ExtResource( 3 )
shader_param/tex_shaded = ExtResource( 2 )
