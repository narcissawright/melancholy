[gd_scene load_steps=18 format=2]

[ext_resource path="res://player/Melanie.gd" type="Script" id=1]
[ext_resource path="res://player/TargetAcquired.gd" type="Script" id=2]
[ext_resource path="res://materials/actor_material.tres" type="Material" id=3]
[ext_resource path="res://player/Shield.gd" type="Script" id=4]

[sub_resource type="CapsuleMesh" id=1]
radius = 0.2
mid_height = 1.37

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode shadows_disabled, ambient_light_disabled;

uniform vec4 color_lit : hint_color = vec4(0.5, 0.5, 0.6, 1.0);
uniform vec4 color_dim : hint_color = vec4(0.1, 0.1, 0.12, 1.0);
uniform bool enable_rim = false;

void fragment() {
	// Opacity Dithering...
	int x = int(FRAGCOORD.x / 2.0) % 4;
	int y = int(FRAGCOORD.y / 2.0) % 4;
	int index = x + y * 4;
	float limit = 0.0;
	
	// Dither pattern
	switch (index) {
		case 0:  limit = 0.0625; break;
		case 1:  limit = 0.5625; break;
		case 2:  limit = 0.1875; break;
		case 3:  limit = 0.6875; break;
		case 4:  limit = 0.8125; break;
		case 5:  limit = 0.3125; break;
		case 6:  limit = 0.9375; break;
		case 7:  limit = 0.4375; break;
		case 8:  limit = 0.25;   break;
		case 9:  limit = 0.75;   break;
		case 10: limit = 0.125;  break;
		case 11: limit = 0.625;  break;
		case 12: limit = 1.0;    break;
		case 13: limit = 0.5;    break;
		case 14: limit = 0.875;  break;
		case 15: limit = 0.375;  break;
	}
	
	// Depth Test
	float depth = FRAGCOORD.z;
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	float linear_depth = -view.z;
	if (linear_depth < limit) { discard; }
}

void light() {
	// Cel Shading
	float NdotL = dot(LIGHT, NORMAL);
	float lit = smoothstep(0.0, 1.0, NdotL);
	
	float rim = 1.0;
	if (enable_rim) {
		float NdotV = dot(VIEW, NORMAL);
		rim = smoothstep(0.0, 1.0, NdotV);
	}
	
	if (lit > 0.5 || rim < 0.2) {
		DIFFUSE_LIGHT = color_lit.rgb;
	} else {
		DIFFUSE_LIGHT = color_dim.rgb;
	}
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/color_lit = Color( 0.380392, 0.380392, 1, 1 )
shader_param/color_dim = Color( 0.168627, 0.129412, 0.396078, 1 )
shader_param/enable_rim = true

[sub_resource type="PrismMesh" id=4]
size = Vector3( 0.2, 0.2, 0.2 )

[sub_resource type="CapsuleShape" id=5]
radius = 0.2
height = 1.37

[sub_resource type="CylinderShape" id=6]
radius = 0.2
height = 1.37

[sub_resource type="BoxShape" id=9]
extents = Vector3( 0.375, 0.75, 0.05 )

[sub_resource type="CubeMesh" id=7]
size = Vector3( 0.75, 1.5, 0.1 )

[sub_resource type="SpatialMaterial" id=8]
albedo_color = Color( 0.713726, 0.658824, 0.623529, 1 )

[sub_resource type="Animation" id=10]
resource_name = "put_away"
length = 0.266667
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("ShieldCollision:shape:extents:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.0333333, 0.266667 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.375, 0.375, 0.1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ShieldCollision:shape:extents:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.0333333, 0.266667 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.75, 0.75, 0.2 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ShieldCollision:translation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.0333333, 0.266667 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.75, -0.3 ), Vector3( 0, 0.75, -0.3 ), Vector3( 0, 0.75, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("ShieldMesh:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.0333333, 0.1, 0.166667, 0.266667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, -180, 0 ), Vector3( 0, -180, 0 ), Vector3( 0, -135, 0 ), Vector3( 0, -90, 0 ), Vector3( 0, 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("ShieldMesh:translation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.0333333, 0.0666667, 0.116667, 0.166667, 0.216667, 0.266667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.75, -0.3 ), Vector3( 0, 0.75, -0.3 ), Vector3( -0.2, 0.813, -0.25 ), Vector3( -0.2, 0.813, -0.15 ), Vector3( -0.3, 0.875, 0 ), Vector3( -0.2, 0.95, 0.15 ), Vector3( 0, 1, 0.2 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("ShieldMesh:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.0333333, 0.166667, 0.266667 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 1, 1, 1 ), Vector3( 1, 1, 1 ), Vector3( 0.75, 0.75, 0.75 ), Vector3( 0.5, 0.5, 0.5 ) ]
}

[sub_resource type="Animation" id=11]
resource_name = "shield_bash"
length = 0.233333
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("ShieldMesh:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.017, 0.034, 0.133333, 0.233333 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.75, -0.3 ), Vector3( 0, 0.75, -0.38 ), Vector3( 0, 0.75, -0.4 ), Vector3( 0, 0.75, -0.4 ), Vector3( 0, 0.75, -0.3 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ShieldCollision:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.017, 0.034, 0.133333, 0.233333 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.75, -0.3 ), Vector3( 0, 0.75, -0.38 ), Vector3( 0, 0.75, -0.4 ), Vector3( 0, 0.75, -0.4 ), Vector3( 0, 0.75, -0.3 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "take_out"
length = 0.133333
step = 0.0166667
tracks/0/type = "value"
tracks/0/path = NodePath("ShieldCollision:shape:extents:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.133333 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.1, 0.375 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ShieldCollision:shape:extents:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.133333 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.2, 0.75 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ShieldCollision:translation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.133333 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.75, 0 ), Vector3( 0, 0.75, -0.3 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("ShieldMesh:rotation_degrees")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.133333 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, -180, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("ShieldMesh:translation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.0333333, 0.0666667, 0.1, 0.133333 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 1, 0.2 ), Vector3( -0.2, 0.95, 0.15 ), Vector3( -0.3, 0.875, 0 ), Vector3( -0.2, 0.813, -0.15 ), Vector3( 0, 0.75, -0.3 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("ShieldMesh:scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.133333 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0.5, 0.5, 0.5 ), Vector3( 1, 1, 1 ) ]
}

[sub_resource type="SphereShape" id=13]
radius = 20.0

[node name="Melanie" type="KinematicBody"]
pause_mode = 1
collision_layer = 2
collision_mask = 21
script = ExtResource( 1 )

[node name="Body" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0.885, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="Face" type="MeshInstance" parent="Body"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.140823, -0.656113 )
mesh = SubResource( 4 )
material/0 = ExtResource( 3 )

[node name="BodyCollision" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0.885, 0 )
shape = SubResource( 5 )

[node name="unused" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.885, 0 )
visible = false
shape = SubResource( 6 )
disabled = true

[node name="RayCast" type="RayCast" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.1, 0 )
enabled = true
cast_to = Vector3( 0, -0.11, 0 )

[node name="ShieldCollision" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.75, -0.3 )
shape = SubResource( 9 )

[node name="ShieldMesh" type="MeshInstance" parent="."]
transform = Transform( -1, 0, 8.74228e-08, 0, 1, 0, -8.74228e-08, 0, -1, 0, 0.75, -0.3 )
mesh = SubResource( 7 )
material/0 = SubResource( 8 )

[node name="ShieldAnim" type="AnimationPlayer" parent="."]
anims/put_away = SubResource( 10 )
anims/shield_bash = SubResource( 11 )
anims/take_out = SubResource( 12 )
script = ExtResource( 4 )

[node name="TargetDetector" type="Area" parent="."]
collision_layer = 0
collision_mask = 8
script = ExtResource( 2 )

[node name="BigSphere" type="CollisionShape" parent="TargetDetector"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )
shape = SubResource( 13 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( -0.610698, -0.555606, 0.564225, 0, 0.712528, 0.701643, -0.791864, 0.428492, -0.43514, 5.75187, 6.27839, 0 )
editor_only = true

[node name="Position3D" type="Position3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.25, 0 )
[connection signal="area_entered" from="TargetDetector" to="TargetDetector" method="_target_acquired"]
[connection signal="area_exited" from="TargetDetector" to="TargetDetector" method="_target_lost"]
