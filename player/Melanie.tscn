[gd_scene load_steps=14 format=2]

[ext_resource path="res://player/Melanie.gd" type="Script" id=1]
[ext_resource path="res://player/TargetAcquired.gd" type="Script" id=2]
[ext_resource path="res://materials/actor_material.tres" type="Material" id=3]
[ext_resource path="res://player/ShieldCollision.gd" type="Script" id=4]

[sub_resource type="CapsuleMesh" id=1]
radius = 0.2
mid_height = 1.37

[sub_resource type="Shader" id=14]
code = "shader_type spatial;
render_mode shadows_disabled, ambient_light_disabled;

uniform vec4 color_lit : hint_color = vec4(0.5, 0.5, 0.6, 1.0);
uniform vec4 color_dim : hint_color = vec4(0.1, 0.1, 0.12, 1.0);

void fragment() {
	// Opacity Dithering...
	int x = int(FRAGCOORD.x / 2.0) % 4;
	int y = int(FRAGCOORD.y / 2.0) % 4;
	int index = x + y * 4;
	float limit = 0.0;
	
	// Dither pattern
	switch (index) {
		case 0:  limit = 0.0625; break;
		case 1:  limit = 0.5625; break;
		case 2:  limit = 0.1875; break;
		case 3:  limit = 0.6875; break;
		case 4:  limit = 0.8125; break;
		case 5:  limit = 0.3125; break;
		case 6:  limit = 0.9375; break;
		case 7:  limit = 0.4375; break;
		case 8:  limit = 0.25;   break;
		case 9:  limit = 0.75;   break;
		case 10: limit = 0.125;  break;
		case 11: limit = 0.625;  break;
		case 12: limit = 1.0;    break;
		case 13: limit = 0.5;    break;
		case 14: limit = 0.875;  break;
		case 15: limit = 0.375;  break;
	}
	
	// Depth Test
	float depth = FRAGCOORD.z;
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	float linear_depth = -view.z;
	if (linear_depth < limit) { discard; }
}

void light() {
	// Cel Shading
	float NdotL = dot(LIGHT, NORMAL);
	float lit = smoothstep(0.0, 1.0, NdotL);
	if (lit > 0.5) {
		DIFFUSE_LIGHT = color_lit.rgb;
	} else {
		DIFFUSE_LIGHT = color_dim.rgb;
	}
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 14 )
shader_param/color_lit = Color( 0.380392, 0.380392, 1, 1 )
shader_param/color_dim = Color( 0.168627, 0.129412, 0.396078, 1 )

[sub_resource type="PrismMesh" id=3]
size = Vector3( 0.2, 0.2, 0.2 )

[sub_resource type="CapsuleShape" id=5]
radius = 0.2
height = 1.37

[sub_resource type="CubeMesh" id=6]
size = Vector3( 0.75, 1.5, 0.1 )

[sub_resource type="SpatialMaterial" id=7]
albedo_color = Color( 0.713726, 0.658824, 0.623529, 1 )

[sub_resource type="BoxShape" id=15]
extents = Vector3( 0.375, 0.75, 0.05 )

[sub_resource type="SphereShape" id=8]
radius = 20.0

[node name="Melanie" type="KinematicBody"]
pause_mode = 1
collision_layer = 2
collision_mask = 21
script = ExtResource( 1 )

[node name="Body" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0.885, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 10 )

[node name="Face" type="MeshInstance" parent="Body"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.140823, -0.656113 )
mesh = SubResource( 3 )
material/0 = ExtResource( 3 )

[node name="BodyCollision" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0.885, 0 )
shape = SubResource( 5 )

[node name="RayCast" type="RayCast" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.1, 0 )
enabled = true
cast_to = Vector3( 0, -0.11, 0 )

[node name="Shield" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.75, -0.3 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="ShieldCollision" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.75, 0 )
shape = SubResource( 15 )
disabled = true
script = ExtResource( 4 )

[node name="Tween" type="Tween" parent="ShieldCollision"]

[node name="TargetZone" type="Area" parent="."]
collision_layer = 0
collision_mask = 8
script = ExtResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="TargetZone"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )
shape = SubResource( 8 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( -0.610698, -0.555606, 0.564225, 0, 0.712528, 0.701643, -0.791864, 0.428492, -0.43514, 5.75187, 6.27839, 0 )
editor_only = true
[connection signal="area_entered" from="TargetZone" to="TargetZone" method="_target_acquired"]
[connection signal="area_exited" from="TargetZone" to="TargetZone" method="_target_lost"]
